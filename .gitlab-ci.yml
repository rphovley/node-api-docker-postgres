image: node:dubnium-alpine

variables:
  DEPLOYER_TAG: "registry.gitlab.com/rphovley-templates/node-api-gcae-gcsql-tenancy/deployer"

stages:
  - dependencies
  - build
  - staging
  - production

cache:
  key:
    files:
      - package.json
  paths:
    - node_modules/

dependencies:
  stage: dependencies
  script:
    - yarn
  only:
    changes:
      - package.json

build:
  stage: build
  cache:
    paths:
      - node_modules/
    policy: pull # we don't change the cache so only pull changes don't push any new ones (saves time)
  script:
    - yarn lint # I have included this in the same stage because of stage overhead (30 seconds per stage)
    # - yarn compile # whatever command(s) to build the project, App Engine is building this project in the deployment stage

deploy_staging:
  stage: staging
  image: $DEPLOYER_TAG
  when: on_success
  environment: staging
  cache:
    paths:
      - node_modules/
    policy: pull
  script:
    - echo $DEPLOYER_SERVICE_ACCOUNT | xxd -r -p - > /tmp/$CI_PIPELINE_ID.json # translate hex back to json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json # use json to authenticate with gcloud
    - rm -rf /tmp/$CI_PIPELINE_ID.json # remove creds from server
    - npx gae-ayaml-env # create yaml file with environment variables we need for App Engine
    - gcloud --quiet --project $PROJECT_ID app deploy app.yaml # Deploy app to App Engine

migrate_staging:
  stage: staging
  tags:
    - deployer
  when: on_success
  environment: staging_migrations
  cache:
    paths:
      - node_modules/
    policy: pull # we don't change the cache so only pull changes don't push any new ones (saves time)
  script:
    - yarn migrate

deploy_production:
  stage: production
  image: $DEPLOYER_TAG
  when: manual
  cache:
    paths:
      - node_modules/
    policy: pull # we don't change the cache so only pull changes don't push any new ones (saves time)
  only:
    - master
  environment: production
  script:
    - echo $DEPLOYER_SERVICE_ACCOUNT | xxd -r -p - > /tmp/$CI_PIPELINE_ID.json # translate hex back to json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json # use json to authenticate with gcloud
    - rm -rf /tmp/$CI_PIPELINE_ID.json # remove creds from server
    - npx gae-ayaml-env # create yaml file with environment variables we need for App Engine
    - gcloud --quiet --project $PROJECT_ID app deploy app.yaml # Deploy app to App Engine

migrate_production:
  stage: production
  tags:
    - deployer
  when: manual
  cache:
    paths:
      - node_modules/
    policy: pull # we don't change the cache so only pull changes don't push any new ones (saves time)
  only:
    - master
  environment: production_migrations
  script:
    - yarn migrate
